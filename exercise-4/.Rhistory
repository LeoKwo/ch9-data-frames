# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
number <- 1:100
employees <- paste("Employee", number)
# Load R's "USPersonalExpenditure" dataset using the `data()` function
# This will produce a data frame called `USPersonalExpenditure`
data("USPersonalExpenditure")
# The variable `USPersonalExpenditure` is now accessible to you. Unfortunately,
# it's not a data frame (it's actually what is called a matrix)
# Test this using the `is.data.frame()` function
is.data.frame(USPersonalExpenditure)
# Luckily, you can pass the USPersonalExpenditure variable as an argument to the
# `data.frame()` function to convert it a data farm. Do this, storing the
# result in a new variable
uspe <- data.frame(USPersonalExpenditure)
# What are the column names of your dataframe?
view(uspe)
# What are the column names of your dataframe?
view(uspe)
View(uspe)
View(uspe)
# Add a column "category" to your data frame that contains the rownames
uspe$categoory <- uspe$col
View(USPersonalExpenditure)
View(uspe)
# Add a column "category" to your data frame that contains the rownames
uspe$categoory <- uspe$col_name
View(uspe)
# Add a column "category" to your data frame that contains the rownames
uspe$categoory <- colnames(uspe)
View(uspe)
# Add a column "category" to your data frame that contains the rownames
uspe$categoory <- rownames(uspe)
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[["personal care", "1940"]]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[["personal care", "X1940"]]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[["personal care", "X1940"]]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe["personal care", "X1940"]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe["personal care"]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe["Personal Care"]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['Personal Care']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['1940']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['X1940']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[['X1940', 'Personal Care']]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['X1940', 'Personal Care']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['X1940', 'personal care']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['X1940', 'personalcare']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['X1940', ]
View(pc_money_1940)
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['personal care', ]
View(pc_money_1940)
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['personal care', ]
View(pc_money_1940)
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['personal care']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[, 'personal care']
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe['personal care', ]
View(pc_money_1940)
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe$personal_care
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe$X1940
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[['X1940', categoory = 'personal care']]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[[categoory = 'personal care']]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[[categoory == 'personal care']]
# How much money was spent on personal care in 1940?
pc_money_1940 <- uspe[['personal care']]
# How much money was spent on personal care in 1940?
rownames(uspe)
colnames(uspe)
pc_money_1940 <- uspe["X1940", "Personal Care"]
pc_money_1940 <- uspe[["X1940", "Personal Care"]]
pc_money_1940 <- uspe[["X1940", ]]
pc_money_1940 <- uspe["X1940", ]
View(pc_money_1940)
pc_money_1940 <- uspe[1, 4]
pc_money_1940 <- uspe['X1940']
View(pc_money_1940)
pc_money_1940 <- uspe['X1940', 'Personal Care']
pc_money_1940 <- uspe[['X1940', 'Personal Care']]
pc_money_1940 <- uspe[['X1940',]]
pc_money_1940 <- uspe['X1940',]
View(pc_money_1940)
pc_money_1940 <- uspe['X1940', ]
pc_money_1940 <- uspe['X1940']
View(pc_money_1940)
pc_money_1940 <- uspe['X1940']['Personal Care']
View(pc_money_1940)
pc_money_1940 <- pc_money_1940['Personl Care']
pc_money_1940 <- pc_money_1940[, 'Personl Care']
pc_money_1940 <- pc_money_1940[,'Personl Care']
pc_money_1940 <- uspe['X1940','personal care']
# How much money was spent on Food and Tobacco in 1960?
ft_money_1960 <- uspe['X1960','Food and Tobacco']
# How much money was spent on Food and Tobacco in 1960?
ft_money_1960 <- uspe['X1960']
View(ft_money_1960)
is.data.frame(ft_money_1960)
ft_money_1960[,'food and tabacco']
pc_money_1940 <- uspe['Personal Care','X1940']
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(data/gates_money.csv)
setwd("~/Documents/ch9/ch9-data-frames/exercise-4")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(./data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(/data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(. data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(../data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(`data/gates_money.csv`, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
read.csv(data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
g_m <- read.csv(data/gates_money.csv, stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
g_m <- read.csv(data/gates_money.csv)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
g_m <- read.csv(/data/gates_money.csv)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv(file = "data/gates_money.csv", stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv(file = "data/gates_money.csv", stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv(file = "data/gates_money.csv", stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = false)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(grants)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- grants$organization
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# What was the mean grant value?
mean(grant)
# What was the mean grant value?
mean(grants)
# What was the mean grant value?
mean(grants$total_amount)
# What was the dollar amount of the largest grant?
max(grants$total_amount)
# What was the dollar amount of the smallest grant?
min(grants$total_amount)
# Which organization received the largest grant?
grants[max(grants$total_amount)]$grant_title
# Which organization received the largest grant?
grants[max(grants$total_amount),]$grant_title
# Which organization received the largest grant?
grants[max(grants$total_amount),]
# Which organization received the largest grant?
grants[,max(grants$total_amount)]
# Which organization received the largest grant?
grants[total_amount]
# Which organization received the largest grant?
grants[,total_amount]
# Which organization received the largest grant?
grants[, total_amount]
# Which organization received the largest grant?
grants[, 'total_amount']
# Which organization received the largest grant?
grants[1, 'total_amount']
# Which organization received the largest grant?
grants[2, 'total_amount']
# Which organization received the largest grant?
grants[max(grants$total_amount), 'grant_title']
# Which organization received the largest grant?
grants[max(grants$total_amount)]
# Which organization received the largest grant?
grants[grants$total_amount == max(grants$total_amount), 'grant_title']
# Which organization received the smallest grant?
grants[grants$total_amount == min(grants$total_amount), 'grant_title']
# How many grants were awarded in 2010?
sum(grants$start_year == 2010, 'total_amount')
# How many grants were awarded in 2010?
sum(grants[grants$start_year == 2010, 'total_amount'])
